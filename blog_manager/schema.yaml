openapi: 3.0.3
info:
  title: Blog Manager API
  version: 1.0.0
  description: API schema for Blog Manager
paths:
  /api/blog/authors/:
    get:
      operationId: blog_authors_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - blog
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAuthorList'
          description: ''
    post:
      operationId: blog_authors_create
      tags:
      - blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Author'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Author'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
  /api/blog/authors/{id}/:
    get:
      operationId: blog_authors_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this author.
        required: true
      tags:
      - blog
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
    put:
      operationId: blog_authors_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this author.
        required: true
      tags:
      - blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Author'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Author'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
    patch:
      operationId: blog_authors_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this author.
        required: true
      tags:
      - blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAuthor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAuthor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAuthor'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
    delete:
      operationId: blog_authors_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this author.
        required: true
      tags:
      - blog
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/blog/categories/:
    get:
      operationId: blog_categories_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - blog
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategoryList'
          description: ''
    post:
      operationId: blog_categories_create
      tags:
      - blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/blog/categories/{id}/:
    get:
      operationId: blog_categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - blog
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: blog_categories_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: blog_categories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: blog_categories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - blog
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/blog/comments/:
    get:
      operationId: blog_comments_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: post
        schema:
          type: integer
      tags:
      - blog
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCommentList'
          description: ''
  /api/blog/comments/new/:
    post:
      operationId: blog_comments_new_create
      tags:
      - blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
  /api/blog/postimages/:
    post:
      operationId: blog_postimages_create
      tags:
      - blog
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostImage'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostImage'
          description: ''
  /api/blog/posts/:
    get:
      operationId: blog_posts_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: site
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
          enum:
          - draft
          - published
          - review
        description: |-
          * `draft` - Draft
          * `review` - Review
          * `published` - Published
      tags:
      - blog
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPostList'
          description: ''
    post:
      operationId: blog_posts_create
      tags:
      - blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostWrite'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostWrite'
          description: ''
  /api/blog/posts/{id}/:
    get:
      operationId: blog_posts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post.
        required: true
      tags:
      - blog
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    put:
      operationId: blog_posts_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post.
        required: true
      tags:
      - blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostWrite'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostWrite'
          description: ''
    patch:
      operationId: blog_posts_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post.
        required: true
      tags:
      - blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPostWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPostWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPostWrite'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostWrite'
          description: ''
    delete:
      operationId: blog_posts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post.
        required: true
      tags:
      - blog
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/blog/posts/{id}/publish/:
    post:
      operationId: blog_posts_publish_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post.
        required: true
      tags:
      - blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
  /api/blog/tags/:
    get:
      operationId: blog_tags_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - blog
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagList'
          description: ''
    post:
      operationId: blog_tags_create
      tags:
      - blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
  /api/blog/tags/{id}/:
    get:
      operationId: blog_tags_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - blog
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    put:
      operationId: blog_tags_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    patch:
      operationId: blog_tags_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTag'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    delete:
      operationId: blog_tags_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - blog
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/posts/:
    get:
      operationId: posts_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: site
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
          enum:
          - draft
          - published
          - review
        description: |-
          * `draft` - Draft
          * `review` - Review
          * `published` - Published
      tags:
      - posts
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPostList'
          description: ''
    post:
      operationId: posts_create
      tags:
      - posts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostWrite'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostWrite'
          description: ''
  /api/posts/{id}/:
    get:
      operationId: posts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post.
        required: true
      tags:
      - posts
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    put:
      operationId: posts_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post.
        required: true
      tags:
      - posts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostWrite'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostWrite'
          description: ''
    patch:
      operationId: posts_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post.
        required: true
      tags:
      - posts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPostWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPostWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPostWrite'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostWrite'
          description: ''
    delete:
      operationId: posts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post.
        required: true
      tags:
      - posts
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/posts/{id}/publish/:
    post:
      operationId: posts_publish_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post.
        required: true
      tags:
      - posts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
  /api/sites/:
    get:
      operationId: sites_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - sites
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSiteList'
          description: ''
    post:
      operationId: sites_create
      tags:
      - sites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Site'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Site'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Site'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: ''
  /api/sites/{id}/:
    get:
      operationId: sites_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this site.
        required: true
      tags:
      - sites
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: ''
    put:
      operationId: sites_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this site.
        required: true
      tags:
      - sites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Site'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Site'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Site'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: ''
    patch:
      operationId: sites_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this site.
        required: true
      tags:
      - sites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSite'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: ''
    delete:
      operationId: sites_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this site.
        required: true
      tags:
      - sites
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    Author:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        site:
          type: integer
        name:
          type: string
          maxLength: 100
        bio:
          type: string
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - id
      - name
      - site
      - slug
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        site:
          type: integer
        name:
          type: string
          maxLength: 100
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - id
      - name
      - site
      - slug
    Comment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        post:
          type: integer
        author_name:
          type: string
          maxLength: 100
        author_email:
          type: string
          format: email
          maxLength: 254
        text:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - author_email
      - author_name
      - created_at
      - id
      - post
      - text
    ExportStatusEnum:
      enum:
      - success
      - failed
      - pending
      type: string
      description: |-
        * `success` - Success
        * `failed` - Failed
        * `pending` - Pending
    LanguageEnum:
      enum:
      - it
      - en
      type: string
      description: |-
        * `it` - Italiano
        * `en` - English
    PaginatedAuthorList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Author'
    PaginatedCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    PaginatedCommentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
    PaginatedPostList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Post'
    PaginatedSiteList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Site'
    PaginatedTagList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    PatchedAuthor:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        site:
          type: integer
        name:
          type: string
          maxLength: 100
        bio:
          type: string
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
    PatchedCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        site:
          type: integer
        name:
          type: string
          maxLength: 100
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
    PatchedPostWrite:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        body:
          type: string
          writeOnly: true
        title:
          type: string
          maxLength: 200
        slug:
          type: string
          maxLength: 200
          pattern: ^[-a-zA-Z0-9_]+$
        content:
          type: string
        published_at:
          type: string
          format: date-time
          nullable: true
        is_published:
          type: boolean
        updated_at:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        language:
          allOf:
          - $ref: '#/components/schemas/LanguageEnum'
          description: |-
            Lingua dell'articolo

            * `it` - Italiano
            * `en` - English
        exported_hash:
          type: string
          description: Hash dell'export (contenuto/front matter) per rilevare cambiamenti
            lato Jekyll.
          maxLength: 64
        last_exported_at:
          type: string
          format: date-time
          nullable: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        reviewed_at:
          type: string
          format: date-time
          nullable: true
        review_notes:
          type: string
        background:
          type: string
          description: 'Incolla qui l''URL Cloudinary dell''immagine di background.
            Es: https://res.cloudinary.com/dkoc4knvv/image/upload/v1/…'
          maxLength: 200
        tags:
          type: string
          description: Separare i tag con virgola o newline
        description:
          type: string
        keywords:
          type: string
          description: Separare le keyword con virgola o newline
        canonical_url:
          type: string
          format: uri
          maxLength: 200
        export_status:
          allOf:
          - $ref: '#/components/schemas/ExportStatusEnum'
          description: |-
            Stato export/build

            * `success` - Success
            * `failed` - Failed
            * `pending` - Pending
        last_pages_build_url:
          type: string
          format: uri
          nullable: true
          description: URL build/errore ultima pubblicazione
          maxLength: 255
        last_export_path:
          type: string
          nullable: true
          description: Percorso ultimo file esportato su Jekyll
          maxLength: 255
        repo_path:
          type: string
          nullable: true
          description: Percorso del file nel repo Jekyll (_posts/....md)
          maxLength: 255
        last_commit_sha:
          type: string
          nullable: true
          description: SHA dell'ultimo commit di pubblicazione
          maxLength: 64
        last_published_hash:
          type: string
          description: Hash dell'ultimo contenuto pubblicato (front-matter + body)
          maxLength: 64
        exported_at:
          type: string
          format: date-time
          nullable: true
          description: Timestamp dell'ultima esportazione
        site:
          type: integer
        author:
          type: integer
          nullable: true
        reviewed_by:
          type: integer
          nullable: true
        categories:
          type: array
          items:
            type: integer
    PatchedSite:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        domain:
          type: string
          format: uri
          maxLength: 200
    PatchedTag:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        slug:
          type: string
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
    Post:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        site:
          type: integer
        title:
          type: string
          maxLength: 200
        slug:
          type: string
          maxLength: 200
          pattern: ^[-a-zA-Z0-9_]+$
        author:
          type: integer
        categories:
          type: array
          items:
            type: integer
        content:
          type: string
        body:
          type: string
        published_at:
          type: string
          format: date-time
          nullable: true
        is_published:
          type: boolean
        updated_at:
          type: string
          format: date-time
          readOnly: true
        images:
          type: array
          items:
            $ref: '#/components/schemas/PostImage'
          readOnly: true
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
          readOnly: true
        cover_image_url:
          type: string
          readOnly: true
        canonical_url:
          type: string
          format: uri
        repo_path:
          type: string
          readOnly: true
        status:
          type: string
        reviewed_by:
          type: integer
          nullable: true
        reviewed_at:
          type: string
          format: date-time
          nullable: true
        review_notes:
          type: string
        exported_hash:
          type: string
          description: Hash dell'export (contenuto/front matter) per rilevare cambiamenti
            lato Jekyll.
          maxLength: 64
        last_exported_at:
          type: string
          format: date-time
          nullable: true
      required:
      - author
      - body
      - categories
      - comments
      - content
      - cover_image_url
      - id
      - images
      - repo_path
      - site
      - slug
      - title
      - updated_at
    PostImage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        image_url:
          type: string
          readOnly: true
        caption:
          type: string
          maxLength: 200
      required:
      - id
      - image_url
    PostWrite:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        body:
          type: string
          writeOnly: true
        title:
          type: string
          maxLength: 200
        slug:
          type: string
          maxLength: 200
          pattern: ^[-a-zA-Z0-9_]+$
        content:
          type: string
        published_at:
          type: string
          format: date-time
          nullable: true
        is_published:
          type: boolean
        updated_at:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        language:
          allOf:
          - $ref: '#/components/schemas/LanguageEnum'
          description: |-
            Lingua dell'articolo

            * `it` - Italiano
            * `en` - English
        exported_hash:
          type: string
          description: Hash dell'export (contenuto/front matter) per rilevare cambiamenti
            lato Jekyll.
          maxLength: 64
        last_exported_at:
          type: string
          format: date-time
          nullable: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        reviewed_at:
          type: string
          format: date-time
          nullable: true
        review_notes:
          type: string
        background:
          type: string
          description: 'Incolla qui l''URL Cloudinary dell''immagine di background.
            Es: https://res.cloudinary.com/dkoc4knvv/image/upload/v1/…'
          maxLength: 200
        tags:
          type: string
          description: Separare i tag con virgola o newline
        description:
          type: string
        keywords:
          type: string
          description: Separare le keyword con virgola o newline
        canonical_url:
          type: string
          format: uri
          maxLength: 200
        export_status:
          allOf:
          - $ref: '#/components/schemas/ExportStatusEnum'
          description: |-
            Stato export/build

            * `success` - Success
            * `failed` - Failed
            * `pending` - Pending
        last_pages_build_url:
          type: string
          format: uri
          nullable: true
          description: URL build/errore ultima pubblicazione
          maxLength: 255
        last_export_path:
          type: string
          nullable: true
          description: Percorso ultimo file esportato su Jekyll
          maxLength: 255
        repo_path:
          type: string
          nullable: true
          description: Percorso del file nel repo Jekyll (_posts/....md)
          maxLength: 255
        last_commit_sha:
          type: string
          nullable: true
          description: SHA dell'ultimo commit di pubblicazione
          maxLength: 64
        last_published_hash:
          type: string
          description: Hash dell'ultimo contenuto pubblicato (front-matter + body)
          maxLength: 64
        exported_at:
          type: string
          format: date-time
          nullable: true
          description: Timestamp dell'ultima esportazione
        site:
          type: integer
        author:
          type: integer
          nullable: true
        reviewed_by:
          type: integer
          nullable: true
        categories:
          type: array
          items:
            type: integer
      required:
      - content
      - created_at
      - id
      - site
      - slug
      - title
      - updated_at
    Site:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        domain:
          type: string
          format: uri
          maxLength: 200
      required:
      - domain
      - id
      - name
    StatusEnum:
      enum:
      - draft
      - review
      - published
      type: string
      description: |-
        * `draft` - Draft
        * `review` - Review
        * `published` - Published
    Tag:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        slug:
          type: string
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - id
      - name
      - slug
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
